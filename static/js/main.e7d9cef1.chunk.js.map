{"version":3,"sources":["reducers/index.js","reducers/errorReducer.js","actionTypes/index.js","reducers/loadingReducer.js","reducers/moviesReducer.js","reducers/ratingsReducer.js","reducers/userReducer.js","actions/index.js","apiCalls/constants.js","apiCalls/getMovies.js","selectors/index.js","components/Loader/Loader.js","apiCalls/postRating.js","apiCalls/getRatings.js","apiCalls/deleteRating.js","components/UserRating/UserRating.js","thunks/requestRating.js","components/MovieCard/MovieCard.js","containers/MovieCardContainer/MovieCardContainer.js","components/MovieDetailsCard/MovieDetailsCard.js","containers/MovieDetailsContainer/MovieDetailsContainer.js","apiCalls/postUser.js","containers/LoginForm/LoginForm.js","thunks/authorizeUser.js","thunks/requestRatings.js","containers/Header/Header.js","components/Nav/Nav.js","components/PageNotFound/PageNotFound.js","containers/App/App.js","thunks/requestMovies.js","index.js"],"names":["rootReducer","combineReducers","hasError","state","action","type","payload","isLoading","movies","ratings","user","hasErrored","errorMessage","status","getMoviesSuccess","getRatingsSuccess","BASE_URL","getMovies","a","fetch","response","ok","Error","json","data","getMovie","id","find","movie","parseInt","getLatestMovies","sort","b","release_date","Loader","className","aria-busy","aria-label","aria-live","role","postRating","movieID","userID","newRating","movie_id","rating","init","method","headers","body","JSON","stringify","getRatings","deleteRating","ratingID","UserRating","props","toggleDropdown","e","setState","dropdown","hoverHandler","stars","target","parentElement","getElementsByClassName","hoverValue","dataset","value","Array","from","forEach","star","style","color","updateRating","isRated","getRatingID","this","dropdownHidden","dropdownClasses","isUserRated","onClick","onMouseOver","data-value","React","Component","connect","item","getMovieRating","console","log","dispatch","updatedRatings","message","requestRating","avgRating","description","image","title","imageBackdrop","release","to","src","alt","toFixed","topMovies","average_rating","latestMovies","renderedMovies","map","overview","poster_path","backdrop_path","key","releaseDate","match","params","postUser","userInfo","LoginForm","onChange","name","onSubmit","preventDefault","authorizeUser","requestRatings","email","password","renderRedirect","length","isFormComplete","data-testid","htmlFor","disabled","loginData","errorStatus","Header","redirect","onLogout","logoutUser","Nav","PageNotFound","App","requestMovies","path","component","MovieDetailsContainer","exact","MovieCardContainer","store","createStore","composeWithDevTools","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7d9cef1.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { errorReducer } from './errorReducer';\nimport { loadingReducer } from './loadingReducer';\nimport { userReducer } from './userReducer';\nimport { moviesReducer } from './moviesReducer';\nimport { ratingsReducer } from './ratingsReducer';\n\nconst rootReducer = combineReducers({\n  hasError: errorReducer,\n  isLoading: loadingReducer,\n  movies: moviesReducer,\n  ratings: ratingsReducer,\n  user: userReducer,\n});\n\nexport default rootReducer;\n","import * as actionTypes from '../actionTypes';\n\nexport const errorReducer = (state = null, action) => {\n  switch (action.type) {\n    case actionTypes.HAS_ERRORED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export const HAS_ERRORED = 'HAS_ERRORED';\nexport const IS_LOADING = 'IS_LOADING';\n\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\nexport const GET_MOVIES_SUCCESS = 'GET_MOVIES_SUCCESS';\n\nexport const GET_RATINGS_SUCCESS = 'GET_RATINGS_SUCCESS';\nexport const POST_RATING_SUCCESS = 'POST_RATING_SUCCESS';\nexport const DELETE_RATING_SUCCESS = 'DELETE_RATING_SUCCESS';\n","import * as actionTypes from '../actionTypes';\n\nexport const loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case actionTypes.IS_LOADING:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import * as actionTypes from '../actionTypes';\n\nexport const moviesReducer = (state = [], action) => {\n  switch (action.type) {\n    case actionTypes.GET_MOVIES_SUCCESS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import * as actionTypes from '../actionTypes';\n\nexport const ratingsReducer = (state = [], action) => {\n  switch (action.type) {\n    case actionTypes.GET_RATINGS_SUCCESS:\n      return action.payload;\n\n    case actionTypes.POST_RATING_SUCCESS:\n      return action.payload;\n\n    case actionTypes.DELETE_RATING_SUCCESS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n","import * as actionTypes from '../actionTypes';\n\nexport const userReducer = (state = null, action) => {\n  switch (action.type) {\n    case actionTypes.LOGIN_USER:\n      return action.payload;\n    case actionTypes.LOGOUT_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n","import * as actionTypes from '../actionTypes';\n\n// loading, error actions\nexport const hasErrored = errorMessage => ({\n  type: actionTypes.HAS_ERRORED,\n  payload: errorMessage,\n});\n\nexport const isLoading = status => ({\n  type: actionTypes.IS_LOADING,\n  payload: status,\n});\n\n// user actions\nexport const loginUser = userInfo => ({\n  type: actionTypes.LOGIN_USER,\n  payload: userInfo,\n});\n\nexport const logoutUser = () => ({\n  type: actionTypes.LOGOUT_USER,\n});\n\n// movie actions\nexport const getMoviesSuccess = movies => ({\n  type: actionTypes.GET_MOVIES_SUCCESS,\n  payload: movies,\n});\n\n// rating actions\nexport const getRatingsSuccess = ratings => ({\n  type: actionTypes.GET_RATINGS_SUCCESS,\n  payload: ratings,\n});\n\nexport const postRatingSuccess = ratings => ({\n  type: actionTypes.POST_RATING_SUCCESS,\n  payload: ratings,\n});\n\nexport const deleteRatingSuccess = ratings => ({\n  type: actionTypes.DELETE_RATING_SUCCESS,\n  payload: ratings,\n});\n","export const BASE_URL = 'https://rancid-tomatillos.herokuapp.com/api/v1';\nexport const LOGIN = '/login';\nexport const MOVIES = '/movies';\nexport const RATINGS = '/ratings';\nexport const USERS = '/users';\n","import { BASE_URL, MOVIES } from './constants';\n\nexport const getMovies = async () => {\n  const response = await fetch(BASE_URL + MOVIES);\n\n  if (!response.ok) {\n    throw new Error('Error fetching movies.');\n  }\n\n  const data = await response.json();\n\n  return data.movies;\n};\n","export const getMovie = (state, id) =>\n  state.movies.find(movie => movie.id === parseInt(id)) || {};\n\nexport const getTopMovies = movies => {\n  const moviesCopy = [...movies];\n  return moviesCopy.sort((a, b) => b.average_rating - a.average_rating);\n};\n\nexport const getLatestMovies = movies => {\n  const moviesCopy = [...movies];\n  return moviesCopy.sort((a, b) => b.release_date - a.release_date);\n};\n\nexport const getMovieRating = (id, ratings) => {\n  const movie = { ...ratings.find(item => item.movie_id === id) };\n\n  if (movie.rating) {\n    return movie.rating;\n  }\n  return null;\n};\n\nexport const getRatingID = (movieID, ratings) => {\n  const ratingsCopy = [...ratings];\n  const ratingID = ratingsCopy.find(rating => rating.movie_id === movieID).id;\n  console.log(ratingID);\n\n  return ratingID;\n};\n","import React from 'react';\n\nconst Loader = () => (\n  <div\n    className=\"fa-3x\"\n    aria-busy=\"true\"\n    aria-label=\"loading\"\n    aria-live=\"polite\"\n    role=\"status\"\n  >\n    <i className=\"fas fa-spinner fa-spin\"></i>\n  </div>\n);\n\nexport default Loader;\n","import { BASE_URL, RATINGS, USERS } from './constants';\n\nexport const postRating = async (movieID, userID, newRating) => {\n  const data = { movie_id: movieID, rating: newRating };\n  const init = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  };\n\n  const response = await fetch(`${BASE_URL + USERS}/${userID}${RATINGS}`, init);\n\n  if (!response.ok) {\n    throw Error('Invalid movie or rating.');\n  }\n\n  const rating = await response.json();\n\n  return rating.rating.rating;\n};\n","import { BASE_URL, RATINGS, USERS } from './constants';\n\nexport const getRatings = async userID => {\n  const response = await fetch(`${BASE_URL + USERS}/${userID}${RATINGS}`);\n\n  if (!response.ok) {\n    throw new Error('Error fetching ratings.');\n  }\n\n  const data = await response.json();\n\n  return data.ratings;\n};\n","import { BASE_URL, RATINGS, USERS } from './constants';\n\nexport const deleteRating = async (userID, ratingID) => {\n  const response = await fetch(\n    `${BASE_URL + USERS}/${userID}${RATINGS}/${ratingID}`,\n    {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error('Error deleting rating.');\n  }\n};\n","import React from 'react';\nimport './UserRating.scss';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { requestRating } from '../../thunks/requestRating';\nimport { getMovieRating, getRatingID } from '../../selectors';\n\nclass UserRating extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rating: null,\n      dropdown: false,\n      movieID: props.movieID,\n    };\n  }\n\n  componentDidMount() {\n    const rating = this.props.rating(this.props.movieID);\n    this.setState({ rating });\n  }\n\n  componentDidUpdate() {\n    if (this.state.rating != this.props.rating(this.props.movieID)) {\n      const rating = this.props.rating(this.props.movieID);\n      this.setState({ rating });\n    }\n  }\n\n  toggleDropdown = e => {\n    this.setState({ dropdown: !this.state.dropdown });\n  };\n\n  hoverHandler = e => {\n    const stars = e.target.parentElement.getElementsByClassName(\n      'rating-selector'\n    );\n    const hoverValue = e.target.dataset.value;\n\n    Array.from(stars).forEach(star => {\n      star.style.color =\n        hoverValue >= star.dataset.value ? '#ffdd00' : '#e4e4e4';\n    });\n  };\n\n  updateRating = async e => {\n    const newRating = parseInt(e.target.dataset.value) + 1;\n    const isRated = this.props.rating(this.props.movieID);\n    let ratingID = null;\n    if (isRated) {\n      ratingID = this.props.getRatingID(this.props.movieID);\n    }\n    await this.props.postRating(\n      this.props.movieID,\n      this.props.userID,\n      newRating,\n      ratingID\n    );\n  };\n\n  render() {\n    const dropdownHidden = this.state.dropdown ? '' : 'hidden';\n    const dropdownClasses = `ratings-dropdown ${dropdownHidden}`;\n    const isUserRated = this.state.rating ? 'yellow' : '';\n\n    return (\n      <div className=\"user-rating\" onClick={() => this.toggleDropdown()}>\n        <p className=\"rating\">\n          {this.state.rating || (\n            <span className=\"rate-this\">Rate&nbsp;This</span>\n          )}\n        </p>\n        <i className={`fas fa-thumbs-up ${isUserRated}`}></i>\n        <div className={dropdownClasses} onMouseOver={this.hoverHandler}>\n          <i\n            className=\"fas fa-thumbs-up rating-selector\"\n            data-value=\"0\"\n            onClick={this.updateRating}\n          ></i>\n          <i\n            className=\"fas fa-thumbs-up rating-selector\"\n            data-value=\"1\"\n            onClick={this.updateRating}\n          ></i>\n          <i\n            className=\"fas fa-thumbs-up rating-selector\"\n            data-value=\"2\"\n            onClick={this.updateRating}\n          ></i>\n          <i\n            className=\"fas fa-thumbs-up rating-selector\"\n            data-value=\"3\"\n            onClick={this.updateRating}\n          ></i>\n          <i\n            className=\"fas fa-thumbs-up rating-selector\"\n            data-value=\"4\"\n            onClick={this.updateRating}\n          ></i>\n          <i\n            className=\"fas fa-thumbs-up rating-selector\"\n            data-value=\"5\"\n            onClick={this.updateRating}\n          ></i>\n          <i\n            className=\"fas fa-thumbs-up rating-selector\"\n            data-value=\"6\"\n            onClick={this.updateRating}\n          ></i>\n          <i\n            className=\"fas fa-thumbs-up rating-selector\"\n            data-value=\"7\"\n            onClick={this.updateRating}\n          ></i>\n          <i\n            className=\"fas fa-thumbs-up rating-selector\"\n            data-value=\"8\"\n            onClick={this.updateRating}\n          ></i>\n          <i\n            className=\"fas fa-thumbs-up rating-selector\"\n            data-value=\"9\"\n            onClick={this.updateRating}\n          ></i>\n          <i\n            className=\"far fa-times-circle\"\n            data-value={this.state.rating - 1}\n          ></i>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  rating: id => getMovieRating(id, state.ratings),\n  userID: state.user.id,\n  getRatingID: movieID => getRatingID(movieID, state.ratings),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  postRating: (movieID, userID, newRating, ratingID) =>\n    dispatch(requestRating(movieID, userID, newRating, ratingID)),\n});\n\nUserRating.propTypes = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRating);\n","import { hasErrored, isLoading, postRatingSuccess } from '../actions';\nimport { postRating } from '../apiCalls/postRating';\nimport { getRatings } from '../apiCalls/getRatings';\nimport { deleteRating } from '../apiCalls/deleteRating';\n\nexport const requestRating = (\n  movieID,\n  userID,\n  newRating,\n  ratingID\n) => async dispatch => {\n  try {\n    dispatch(isLoading(true));\n\n    if (ratingID) {\n      await deleteRating(userID, ratingID);\n    }\n\n    await postRating(movieID, userID, newRating);\n    const updatedRatings = await getRatings(userID);\n    await dispatch(postRatingSuccess(updatedRatings));\n    dispatch(isLoading(false));\n  } catch (error) {\n    dispatch(isLoading(false));\n    dispatch(hasErrored(error.message));\n  }\n};\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport './MovieCard.scss';\nimport UserRating from '../UserRating/UserRating';\n\nconst MovieCard = ({\n  avgRating,\n  description,\n  id,\n  image,\n  imageBackdrop,\n  release,\n  title,\n  user\n}) => (\n\n    <article className=\"movie-card\">\n      <Link to={\"/movies/\" + id}>\n        <img src={image} alt={`Poster for ${title}`} className=\"movie-card-image\" />\n      </Link>\n      <div className=\"title-wrapper\">\n        <Link to={\"/movies/\" + id}>\n          <p className=\"movie-card-title\">{title}</p>\n        </Link>\n        <div className=\"movie-card-rating\">\n          <div className=\"avg-rating\">\n            <p>{avgRating.toFixed()}</p>\n            <i className=\"fas fa-star\"></i>\n          </div>\n          {user && <UserRating movieID={id}/>}\n        </div>\n      </div>\n    </article>\n\n);\n\nconst mapStateToProps = state => ({\n  user: state.user\n})\n\nexport default connect(mapStateToProps)(MovieCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getTopMovies, getLatestMovies } from '../../selectors';\nimport './_MovieCardContainer.scss';\nimport Loader from '../../components/Loader/Loader';\nimport MovieCard from '../../components/MovieCard/MovieCard';\n\nconst MovieCardContainer = ({ isLoading, topMovies, latestMovies }) => {\n  const renderedMovies = movies =>\n    movies.map(movie => (\n      <MovieCard\n        avgRating={movie.average_rating}\n        description={movie.overview}\n        id={movie.id}\n        image={movie.poster_path}\n        imageBackdrop={movie.backdrop_path}\n        key={movie.id}\n        release={movie.release_date}\n        title={movie.title}\n      />\n    ));\n\n  return (\n    <section className=\"container-wrapper\">\n      <h2 className=\"container-title\">Latest</h2>\n      {isLoading && <Loader />}\n      <section className=\"card-container\">\n        {renderedMovies(latestMovies)}\n      </section>\n      <h2 className=\"container-title\">Top Rated</h2>\n      <section className=\"card-container\">{renderedMovies(topMovies)}</section>\n    </section>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isLoading: state.isLoading,\n  topMovies: getTopMovies(state.movies),\n  latestMovies: getLatestMovies(state.movies),\n});\n\nMovieCardContainer.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      average_rating: PropTypes.number,\n      overview: PropTypes.string,\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      backdrop_path: PropTypes.string,\n      release_date: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n\nexport default connect(mapStateToProps)(MovieCardContainer);\n","import React from 'react';\nimport UserRating from '../UserRating/UserRating';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './MovieDetailsCard.scss';\n\nconst MovieDetailsCard = ({ image, releaseDate, title, rating, overview, user, id }) => (\n  <section className=\"movie-details-card-wrapper\">\n    <img src={image} alt={title} />\n    <article>\n      <p>Release Date: {releaseDate}</p>\n      <h2>{title}</h2>\n      <p>Rating: {rating}</p>\n      {user && <UserRating movieID={id}/>}\n      <p>{overview}</p>\n    </article>\n  </section>\n);\n\nMovieDetailsCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  releaseDate: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n})\n\nexport default connect(mapStateToProps)(MovieDetailsCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getMovie } from '../../selectors/';\nimport MovieDetailsCard from '../../components/MovieDetailsCard/MovieDetailsCard';\nimport Loader from '../../components/Loader/Loader';\n\nconst MovieDetails = ({ match, movie}) => {\n\n  return (\n    <div>\n      <MovieDetailsCard\n        image={movie.poster_path}\n        releaseDate={movie.release_date}\n        title={movie.title}\n        rating={movie.average_rating ? movie.average_rating.toFixed() : null}\n        overview={movie.overview}\n        id={movie.id}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, props) => ({\n  movie: getMovie(state, props.match.params.id)\n});\n\nexport default connect(mapStateToProps)(MovieDetails);\n","import { BASE_URL, LOGIN } from './constants';\n\nexport const postUser = async userInfo => {\n  const init = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userInfo),\n  };\n\n  const response = await fetch(BASE_URL + LOGIN, init);\n\n  if (!response.ok) {\n    throw Error('Please use a valid username and password.');\n  }\n\n  const data = await response.json();\n\n  return data.user;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authorizeUser } from '../../thunks/authorizeUser';\nimport { requestRatings } from '../../thunks/requestRatings';\nimport { hasErrored } from '../../actions';\nimport './_LoginForm.scss';\nimport Loader from '../../components/Loader/Loader';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onSubmit = async e => {\n    e.preventDefault();\n    const user = await this.props.authorizeUser(this.state);\n    this.props.requestRatings(user.id);\n    this.setState({\n      email: '',\n      password: '',\n    });\n  };\n\n  renderRedirect = () => {\n    if (this.props.user && this.props.ratings.length)\n      return <Redirect to=\"/\" />;\n  };\n\n  render() {\n    const { email, password } = this.state;\n    const isFormComplete = email && password;\n\n    return (\n      <>\n        {this.renderRedirect()}\n        <form className=\"login-form\" onSubmit={this.onSubmit}>\n          <h2 className=\"title\">Log in</h2>\n          <Link to=\"/\">\n            <button\n              aria-label=\"Close login form\"\n              className=\"close-button\"\n              data-testid=\"close-button\"\n              onClick={() => this.props.hasErrored(null)}\n              type=\"button\"\n            >\n              <i className=\"far fa-times-circle\"></i>\n            </button>\n          </Link>\n          <label htmlFor=\"email\">\n            Email\n            <input\n              id=\"email\"\n              name=\"email\"\n              onChange={this.onChange}\n              type=\"email\"\n              value={email}\n            />\n          </label>\n          <label htmlFor=\"password\">\n            Password\n            <input\n              id=\"password\"\n              name=\"password\"\n              onChange={this.onChange}\n              type=\"password\"\n              value={password}\n            />\n          </label>\n          {this.props.isLoading && <Loader />}\n          {this.props.hasError && (\n            <p className=\"login-error\">{this.props.hasError}</p>\n          )}\n          <button\n            className=\"submit-button\"\n            disabled={!isFormComplete}\n            type=\"submit\"\n          >\n            Log in\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  hasError: state.hasError,\n  isLoading: state.isLoading,\n  user: state.user,\n  ratings: state.ratings,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: loginData => dispatch(authorizeUser(loginData)),\n  hasErrored: errorStatus => dispatch(hasErrored(errorStatus)),\n  requestRatings: userID => dispatch(requestRatings(userID)),\n});\n\nLoginForm.propTypes = {\n  hasError: PropTypes.string,\n  isLoading: PropTypes.bool.isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string,\n    id: PropTypes.number,\n    name: PropTypes.string,\n  }),\n  authorizeUser: PropTypes.func.isRequired,\n  hasErrored: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","import { hasErrored, isLoading, loginUser } from '../actions';\nimport { postUser } from '../apiCalls/postUser';\n\nexport const authorizeUser = loginData => async dispatch => {\n  try {\n    dispatch(isLoading(true));\n    const user = await postUser(loginData);\n    await dispatch(loginUser(user));\n    dispatch(isLoading(false));\n    dispatch(hasErrored(null));\n    \n    return user;\n  } catch (error) {\n    dispatch(isLoading(false));\n    dispatch(hasErrored(error.message));\n  }\n};\n","import { hasErrored, isLoading, getRatingsSuccess } from '../actions';\nimport { getRatings } from '../apiCalls/getRatings';\n\nexport const requestRatings = userID => async dispatch => {\n  try {\n    dispatch(isLoading(true));\n    const ratings = await getRatings(userID);\n    await dispatch(getRatingsSuccess(ratings));\n    dispatch(isLoading(false));\n  } catch (error) {\n    dispatch(isLoading(false));\n    dispatch(hasErrored(error.message));\n  }\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../actions';\nimport './_Header.scss';\n\nclass Header extends Component {\n  state = {\n    redirect: false,\n  };\n\n  onLogout = () => {\n    this.props.logoutUser();\n    this.setState({ redirect: true });\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) return <Redirect to=\"/\" />;\n  };\n\n  render() {\n    const { user } = this.props;\n    return (\n      <>\n        {this.renderRedirect()}\n        <header className=\"header\">\n          <h1 className=\"title\">\n            <i className=\"fas fa-film\"></i>Movie Tracker\n          </h1>\n          <div className=\"login-container\">\n            {!user && (\n              <Link to=\"/login\" className=\"header-link\">\n                Log in\n              </Link>\n            )}\n            {user && (\n              <div className=\"user-container\">\n                <p className=\"user-welcome\">Hi, {user.name}</p>\n                <a className=\"header-link\" onClick={this.onLogout}>\n                  Log out\n                </a>\n              </div>\n            )}\n          </div>\n        </header>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  logoutUser: () => dispatch(logoutUser()),\n});\n\nHeader.propTypes = {\n  user: PropTypes.shape({\n    email: PropTypes.string,\n    id: PropTypes.number,\n    name: PropTypes.string,\n  }),\n  logoutUser: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = props => (\n  <nav className=\"nav\">\n    <section className=\"nav-section\">\n      <h4 className=\"nav-category\">Browse</h4>\n      <NavLink to=\"/\" className=\"nav-link\">\n        <i className=\"fas fa-border-all\"></i>\n        View all\n      </NavLink>\n      <NavLink to=\"/\" className=\"nav-link\">\n        <i className=\"fas fa-fire-alt\"></i>\n        Top rated\n      </NavLink>\n    </section>\n    <section className=\"nav-section\">\n      <h4 className=\"nav-category\">Filter</h4>\n      <p className=\"nav-link\">\n        <i className=\"fas fa-plus\"></i>Rating\n      </p>\n      <p className=\"nav-link\">\n        <i className=\"fas fa-plus\"></i>Release date\n      </p>\n    </section>\n  </nav>\n);\n\nexport default Nav;\n","import React from 'react';\nimport './_PageNotFound.scss';\n\nconst PageNotFound = () => (\n  <p className=\"page-not-found\">\n    Sorry, we can't seem to find the page you were looking for.\n  </p>\n);\n\nexport default PageNotFound;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { requestMovies } from '../../thunks/requestMovies';\nimport MovieCardContainer from '../MovieCardContainer/MovieCardContainer';\nimport MovieDetailsContainer from '../MovieDetailsContainer/MovieDetailsContainer';\nimport LoginForm from '../LoginForm/LoginForm';\nimport Header from '../Header/Header';\nimport Nav from '../../components/Nav/Nav';\nimport PageNotFound from '../../components/PageNotFound/PageNotFound';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.requestMovies();\n  }\n\n  render() {\n    return (\n      <div className=\"layout\">\n        <Header />\n        <Nav />\n        <main className=\"main\">\n          <Switch>\n            <Route path=\"/movies/:id\" component={MovieDetailsContainer} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route exact path=\"/\" component={MovieCardContainer} />\n            <Route component={PageNotFound} />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  requestMovies: () => dispatch(requestMovies()),\n});\n\nApp.propTypes = {\n  requestMovies: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { hasErrored, isLoading, getMoviesSuccess } from '../actions';\nimport { getMovies } from '../apiCalls/getMovies';\n\nexport const requestMovies = () => async dispatch => {\n  try {\n    dispatch(isLoading(true));\n    const movies = await getMovies();\n    await dispatch(getMoviesSuccess(movies));\n    dispatch(isLoading(false));\n  } catch (error) {\n    dispatch(isLoading(false));\n    dispatch(hasErrored(error.message));\n  }\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\nimport App from './containers/App/App';\nimport './index.scss';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nrender(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}